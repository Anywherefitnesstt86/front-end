{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TextInput from './TextInput.js';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-dom'; // import schema from './formSchema.js';\n\nimport Footer from './Footer';\nconst initialNewUserFormValues = {\n  personName: '',\n  email: '',\n  age: '',\n  password: '',\n  isInstructor: false\n};\nconst initialNewUserFormErrors = {\n  personName: '',\n  email: '',\n  age: '',\n  password: '',\n  isInstructor: ''\n};\n\nfunction NewUserForm(props) {\n  _s();\n\n  const {\n    user,\n    setUser,\n    newUserFormValues,\n    setNewUserFormValues,\n    newUserFormErrors,\n    setNewUserFormErrors,\n    newUserDisabled,\n    setNewUserDisabled\n  } = props;\n  const history = useHistory(); // -------------------- Helper Functions -----------------\n\n  const postNewUser = newUser => {\n    axios.post('https://pt-fitness.herokuapp.com/', newUser).then(res => {\n      setUser(res.data);\n      console.log(\"New User \", res.data);\n      console.log(\"Successful res back from Axios, res.data: \", res.data);\n      setNewUserFormValues(initialNewUserFormValues); // reset form\n\n      history.push(`/`); // route to home page\n    }).catch(err => {\n      console.log(\"Error: \", err);\n      history.push(`/error`);\n      debugger;\n    });\n  }; // posts and resets form\n\n\n  const validate = (name, value) => {\n    console.log(\"validate: \", name, value); // yup.reach(schema, name)\n    //   .validate(value)\n    //   .then(() => setNewUserFormErrors({ ...newUserFormErrors, [name]: ''}))\n    //   .catch(err => setNewUserFormErrors({ ...newUserFormErrors, [name]: err.errors[0] })) // pending schema\n\n    console.log(\"passes form validation\");\n  }; // run validation with yup\n  // -------------------- Event Handlers -----------------\n\n\n  const inputChange = e => {\n    const {\n      name,\n      type,\n      value,\n      checked\n    } = e.target; // console.log(`name: ${name}, value: ${value}`);\n\n    const inputValue = type === 'checkbox' ? checked : value; // option to include checkbox\n\n    console.log(\"inputValue: \", inputValue); // validate(name, inputValue);\n\n    setNewUserFormValues({ ...newUserFormValues,\n      [name]: inputValue\n    }); // [ ] is not an array\n  };\n\n  const formSubmit = e => {\n    console.log(\"form was submitted\");\n    e.preventDefault(); //  to prevent browser refresh\n\n    const newUser = {\n      personName: newUserFormValues.personName,\n      email: newUserFormValues.email,\n      age: newUserFormValues.age,\n      password: newUserFormValues.password\n    };\n    console.log(\"new user: \", newUser); // postNewUser(newUser) // post new user using helper function postNewUser\n    // history.push(`/`); // back to home page\n  }; // -------------------- Side Effects -----------------\n\n\n  useEffect(() => {// schema.isValid(newUserFormValues).then(valid => setNewUserDisabled(!valid)) // pending schema\n    // console.log(\"disabled?\")\n  }, [newUserFormValues]); // Adjust the status of 'disabled\" every time formValues changes\n\n  useEffect(() => {\n    console.log(\"The form Errors have changed\", newUserFormErrors);\n  }, [newUserFormErrors]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      type: \"text\",\n      name: \"personName\",\n      placeholder: \" add your name here \",\n      onChange: inputChange,\n      value: newUserFormValues.personName,\n      label: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newUserFormErrors.personName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \" email address \",\n      onChange: inputChange,\n      value: newUserFormValues.email,\n      label: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newUserFormErrors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      type: \"text\",\n      name: \"age\",\n      placeholder: \" enter your age \",\n      onChange: inputChange,\n      value: newUserFormValues.age,\n      label: \"Age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newUserFormErrors.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      type: \"text\",\n      name: \"password\",\n      placeholder: \" enter your new password \",\n      onChange: inputChange,\n      value: newUserFormValues.password,\n      label: \"New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newUserFormErrors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"If you are signing up as an instructor, you should have received an instructor code in an email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      type: \"text\",\n      name: \"isInstructor\",\n      placeholder: \" Instructor Code\",\n      onChange: inputChange,\n      value: newUserFormValues.isInstructor,\n      label: \"Instructor Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"submitBtn\",\n      disabled: newUserDisabled,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewUserForm, \"3WyoFml4oZXE7oPo4ynvC0RjEsU=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewUserForm;\nexport default NewUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUserForm\");","map":{"version":3,"sources":["/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js"],"names":["React","useState","useEffect","TextInput","axios","yup","useHistory","Footer","initialNewUserFormValues","personName","email","age","password","isInstructor","initialNewUserFormErrors","NewUserForm","props","user","setUser","newUserFormValues","setNewUserFormValues","newUserFormErrors","setNewUserFormErrors","newUserDisabled","setNewUserDisabled","history","postNewUser","newUser","post","then","res","data","console","log","push","catch","err","validate","name","value","inputChange","e","type","checked","target","inputValue","formSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TextInput from './TextInput.js';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-dom';\n// import schema from './formSchema.js';\nimport Footer from './Footer'\n\n\nconst initialNewUserFormValues = {\n  personName: '',\n  email: '',\n  age: '',\n  password: '',\n  isInstructor: false,\n};\n\nconst initialNewUserFormErrors = {\n  personName: '',\n  email: '',\n  age: '',\n  password: '',\n  isInstructor: '',\n};\n\n\n\n\nfunction NewUserForm (props) {\n  const { user, setUser, newUserFormValues, setNewUserFormValues, newUserFormErrors, setNewUserFormErrors, newUserDisabled, setNewUserDisabled } = props\n\n  const history = useHistory();\n\n  // -------------------- Helper Functions -----------------\n\n  const postNewUser = newUser => {\n    axios.post('https://pt-fitness.herokuapp.com/', newUser)\n      .then(res => {\n        setUser(res.data)\n        console.log(\"New User \", res.data);\n        console.log(\"Successful res back from Axios, res.data: \", res.data);\n\n        setNewUserFormValues(initialNewUserFormValues); // reset form\n\n        history.push(`/`); // route to home page\n\n      })\n      .catch(err => {\n        console.log(\"Error: \", err)\n        history.push(`/error`)\n        debugger\n      })\n  } // posts and resets form\n\n  const validate = (name, value) => {\n  console.log(\"validate: \", name, value)\n  // yup.reach(schema, name)\n  //   .validate(value)\n  //   .then(() => setNewUserFormErrors({ ...newUserFormErrors, [name]: ''}))\n  //   .catch(err => setNewUserFormErrors({ ...newUserFormErrors, [name]: err.errors[0] })) // pending schema\n\n    console.log(\"passes form validation\")\n  }; // run validation with yup\n\n  // -------------------- Event Handlers -----------------\n\n  const inputChange = (e) => {\n    const { name, type, value, checked } = e.target;\n    // console.log(`name: ${name}, value: ${value}`);\n    const inputValue = type === 'checkbox' ? checked : value;  // option to include checkbox\n    console.log(\"inputValue: \", inputValue)\n    // validate(name, inputValue);\n    setNewUserFormValues({ ...newUserFormValues, [name]: inputValue }); // [ ] is not an array\n  } \n\n  const formSubmit = (e) => {\n\n    console.log(\"form was submitted\")\n      e.preventDefault(); //  to prevent browser refresh\n\n      const newUser = {\n          personName: newUserFormValues.personName,\n          email: newUserFormValues.email,\n          age: newUserFormValues.age,\n          password: newUserFormValues.password,\n      }\n\n      console.log(\"new user: \", newUser)\n      // postNewUser(newUser) // post new user using helper function postNewUser\n\n      // history.push(`/`); // back to home page\n  };\n\n  // -------------------- Side Effects -----------------\n\n  useEffect(() => {\n    // schema.isValid(newUserFormValues).then(valid => setNewUserDisabled(!valid)) // pending schema\n    // console.log(\"disabled?\")\n    }, [newUserFormValues]); // Adjust the status of 'disabled\" every time formValues changes\n\n  useEffect(() => {\n    console.log(\"The form Errors have changed\", newUserFormErrors)\n  }, [newUserFormErrors]);\n\n\n  return (\n    <>\n        <TextInput\n          type=\"text\"\n          name=\"personName\"\n          placeholder=\" add your name here \"\n          onChange={inputChange} \n          value={newUserFormValues.personName}\n          label={\"Name\"}\n        />\n        <div>{newUserFormErrors.personName}</div>\n\n        <TextInput\n          type=\"text\"\n          name=\"email\"\n          placeholder=\" email address \"\n          onChange={inputChange} \n          value={newUserFormValues.email}\n          label={\"Email\"}\n        />\n        <div>{newUserFormErrors.email}</div>\n\n        <TextInput\n          type=\"text\"\n          name=\"age\"\n          placeholder=\" enter your age \"\n          onChange={inputChange} \n          value={newUserFormValues.age}\n          label={\"Age\"}\n        />\n        <div>{newUserFormErrors.age}</div>\n\n        <TextInput\n          type=\"text\"\n          name=\"password\"\n          placeholder=\" enter your new password \"\n          onChange={inputChange} \n          value={newUserFormValues.password}\n          label={\"New Password\"}\n        />\n        <div>{newUserFormErrors.password}</div>\n\n        <p>If you are signing up as an instructor, you should have received an instructor code in an email.</p>\n        <TextInput\n          type=\"text\"\n          name=\"isInstructor\"\n          placeholder=\" Instructor Code\"\n          onChange={inputChange} \n          value={newUserFormValues.isInstructor}\n          label={\"Instructor Code\"}\n        />\n        <br/>\n        <br/>\n        <button  id=\"submitBtn\" disabled={newUserDisabled}>Submit</button> \n\n      <Footer/>\n\n    </>\n  )\n}\n\nexport default NewUserForm;"]},"metadata":{},"sourceType":"module"}