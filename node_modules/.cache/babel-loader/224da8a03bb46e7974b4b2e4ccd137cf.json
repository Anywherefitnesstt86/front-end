{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport TextInput from './TextInput.js';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport Input from './Input.js';\nimport Checkbox from './Checkbox.js';\nimport { useHistory } from 'react-router-dom';\nimport schema from './formSchema.js';\nimport Header from './Header.js';\n\nfunction NewUserForm(props) {\n  const {\n    user,\n    setUser,\n    newUserFormValues,\n    setNewUserFormValues,\n    newUserFormErrors,\n    setNewUserFormErrors,\n    newUserDisabled,\n    setNewUserDisabled\n  } = props; // -------------------- Helper Functions -----------------\n\n  const postNewUser = newUser => {\n    axios.post('https://reqres.in/api/user', newUser).then(res => {\n      setUser(res.data);\n      console.log(\"New User \", res.data);\n      console.log(\"Successful res back from Axios, res.data: \", res.data);\n      setNewUserFormValues(initialNewUserFormValues); // reset form\n\n      history.push(`/`); // route to home page\n    }).catch(err => {\n      console.log(\"Error: \", err);\n      history.push(`/error`);\n      debugger;\n    });\n  }; // posts and resets form\n\n\n  const validate = (name, value) => {\n    console.log(\"validate: \", name, value);\n    yup.reach(schema, name).validate(value).then(() => setFormErrors({ ...formErrors,\n      [name]: ''\n    })).catch(err => setFormErrors({ ...formErrors,\n      [name]: err.errors[0]\n    }));\n    console.log(\"passes form validation\");\n  }; // run validation with yup\n  // -------------------- Event Handlers -----------------\n\n\n  const inputChange = e => {\n    const {\n      name,\n      type,\n      value,\n      checked\n    } = e.target; // console.log(`name: ${name}, value: ${value}`);\n\n    const inputValue = type === 'checkbox' ? checked : value; // option to include checkbox\n\n    console.log(\"inputValue: \", inputValue); // validate(name, inputValue);\n\n    setNewUserFormValues({ ...newUserFormValues,\n      [name]: inputValue\n    }); // [ ] is not an array\n  };\n\n  const formSubmit = e => {\n    console.log(\"form was submitted\");\n    e.preventDefault(); //  to prevent browser refresh\n\n    const newUser = {\n      personName: newUserFormValues.personName,\n      email: newUserFormValues.email,\n      age: newUserFormValues.age,\n      password: newUserFormValues.password\n    };\n    console.log(\"new user: \", newUser); // postNewUser(newUser) // post new user using helper function postNewUser\n    // history.push(`/`); // back to home page\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      type: \"text\",\n      name: \"personName\",\n      placeholder: \" add your name here \",\n      onChange: inputChange,\n      value: newUserFormValues.personName,\n      label: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newUserFormErrors.personName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \" email address \",\n      onChange: inputChange,\n      value: newUserFormValues.email,\n      label: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newUserFormErrors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      type: \"text\",\n      name: \"age\",\n      placeholder: \" enter your age \",\n      onChange: inputChange,\n      value: newUserFormValues.age,\n      label: \"Age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newUserFormErrors.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      type: \"text\",\n      name: \"password\",\n      placeholder: \" enter your new password \",\n      onChange: inputChange,\n      value: newUserFormValues.password,\n      label: \"New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newUserFormErrors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"submitBtn\",\n      disabled: newUserDisabled,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = NewUserForm;\nexport default NewUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUserForm\");","map":{"version":3,"sources":["/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js"],"names":["React","useState","useEffect","TextInput","axios","yup","Input","Checkbox","useHistory","schema","Header","NewUserForm","props","user","setUser","newUserFormValues","setNewUserFormValues","newUserFormErrors","setNewUserFormErrors","newUserDisabled","setNewUserDisabled","postNewUser","newUser","post","then","res","data","console","log","initialNewUserFormValues","history","push","catch","err","validate","name","value","reach","setFormErrors","formErrors","errors","inputChange","e","type","checked","target","inputValue","formSubmit","preventDefault","personName","email","age","password"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TextInput from './TextInput.js';\nimport axios from 'axios';\n\n\n\nimport * as yup from 'yup';\n\nimport Input from './Input.js';\nimport Checkbox from './Checkbox.js';\nimport { useHistory } from 'react-router-dom';\nimport schema from './formSchema.js';\nimport Header from './Header.js';\n\n\n\nfunction NewUserForm (props) {\n  const { user, setUser, newUserFormValues, setNewUserFormValues, newUserFormErrors, setNewUserFormErrors, newUserDisabled, setNewUserDisabled } = props\n\n  // -------------------- Helper Functions -----------------\n  const postNewUser = newUser => {\n    axios.post('https://reqres.in/api/user', newUser)\n      .then(res => {\n        setUser(res.data)\n        console.log(\"New User \", res.data);\n        console.log(\"Successful res back from Axios, res.data: \", res.data);\n\n        setNewUserFormValues(initialNewUserFormValues); // reset form\n\n        history.push(`/`); // route to home page\n\n      })\n      .catch(err => {\n        console.log(\"Error: \", err)\n        history.push(`/error`)\n        debugger\n      })\n} // posts and resets form\n\nconst validate = (name, value) => {\nconsole.log(\"validate: \", name, value)\nyup.reach(schema, name)\n  .validate(value)\n  .then(() => setFormErrors({ ...formErrors, [name]: ''}))\n  .catch(err => setFormErrors({ ...formErrors, [name]: err.errors[0] }))\n\n  console.log(\"passes form validation\")\n}; // run validation with yup\n\n\n\n  // -------------------- Event Handlers -----------------\n\n\n  const inputChange = (e) => {\n    const { name, type, value, checked } = e.target;\n    // console.log(`name: ${name}, value: ${value}`);\n    const inputValue = type === 'checkbox' ? checked : value;  // option to include checkbox\n    console.log(\"inputValue: \", inputValue)\n    // validate(name, inputValue);\n    setNewUserFormValues({ ...newUserFormValues, [name]: inputValue }); // [ ] is not an array\n  } \n\n  const formSubmit = (e) => {\n\n    console.log(\"form was submitted\")\n      e.preventDefault(); //  to prevent browser refresh\n\n      const newUser = {\n          personName: newUserFormValues.personName,\n          email: newUserFormValues.email,\n          age: newUserFormValues.age,\n          password: newUserFormValues.password,\n      }\n\n      console.log(\"new user: \", newUser)\n      // postNewUser(newUser) // post new user using helper function postNewUser\n\n      // history.push(`/`); // back to home page\n  };\n\n\n\n  return (\n    <>\n        <TextInput\n          type=\"text\"\n          name=\"personName\"\n          placeholder=\" add your name here \"\n          onChange={inputChange} \n          value={newUserFormValues.personName}\n          label={\"Name\"}\n        />\n        <div>{newUserFormErrors.personName}</div>\n\n        <TextInput\n          type=\"text\"\n          name=\"email\"\n          placeholder=\" email address \"\n          onChange={inputChange} \n          value={newUserFormValues.email}\n          label={\"Email\"}\n        />\n        <div>{newUserFormErrors.email}</div>\n\n        <TextInput\n          type=\"text\"\n          name=\"age\"\n          placeholder=\" enter your age \"\n          onChange={inputChange} \n          value={newUserFormValues.age}\n          label={\"Age\"}\n        />\n        <div>{newUserFormErrors.age}</div>\n\n        <TextInput\n          type=\"text\"\n          name=\"password\"\n          placeholder=\" enter your new password \"\n          onChange={inputChange} \n          value={newUserFormValues.password}\n          label={\"New Password\"}\n        />\n        <div>{newUserFormErrors.password}</div>\n\n        <button  id=\"submitBtn\" disabled={newUserDisabled}>Submit</button> \n\n    </>\n  )\n}\n\nexport default NewUserForm;"]},"metadata":{},"sourceType":"module"}