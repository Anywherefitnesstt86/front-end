{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js\";\nimport TextInput from './TextInput.js';\n\nfunction NewUserForm(props) {\n  const {\n    user,\n    setUser,\n    newUserFormValues,\n    setNewUserFormValues,\n    newUserFormErrors,\n    setNewUserFormErrors,\n    newUserDisabled,\n    setNewUserDisabled\n  } = props; // -------------------- Helper Functions -----------------\n  // -------------------- Event Handlers -----------------\n\n  const inputChange = e => {\n    const {\n      name,\n      type,\n      value,\n      checked\n    } = e.target; // console.log(`name: ${name}, value: ${value}`);\n\n    const inputValue = type === 'checkbox' ? checked : value; // option to include checkbox\n\n    console.log(\"inputValue: \", inputValue); // validate(name, inputValue);\n\n    setNewUserFormValues({ ...newUserFormValues,\n      [name]: inputValue\n    }); // [ ] is not an array\n  };\n\n  const formSubmit = e => {\n    console.log(\"form was submitted\");\n    e.preventDefault(); //  to prevent browser refresh\n\n    const newUser = {\n      personName: newUserFormValues.personName,\n      email: newUserFormValues.email,\n      age: newUserFormValues.age,\n      password: newUserFormValues.password\n    };\n    console.log(\"new user: \", newUser); // postNewUser(newUser) // post new user using helper function postNewUser\n    // history.push(`/`); // back to home page\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      type: \"text\",\n      name: \"personName\",\n      placeholder: \" add your name here \",\n      onChange: inputChange,\n      value: newUserFormValues.personName,\n      label: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \" email address \",\n      onChange: inputChange,\n      value: newUserFormValues.email,\n      label: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = NewUserForm;\nexport default NewUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUserForm\");","map":{"version":3,"sources":["/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js"],"names":["TextInput","NewUserForm","props","user","setUser","newUserFormValues","setNewUserFormValues","newUserFormErrors","setNewUserFormErrors","newUserDisabled","setNewUserDisabled","inputChange","e","name","type","value","checked","target","inputValue","console","log","formSubmit","preventDefault","newUser","personName","email","age","password"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,gBAAtB;;AAGA,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,oBAApC;AAA0DC,IAAAA,iBAA1D;AAA6EC,IAAAA,oBAA7E;AAAmGC,IAAAA,eAAnG;AAAoHC,IAAAA;AAApH,MAA2IR,KAAjJ,CAD2B,CAG7B;AAKE;;AAGA,QAAMS,WAAW,GAAIC,CAAD,IAAO;AACzB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,QAAiCJ,CAAC,CAACK,MAAzC,CADyB,CAEzB;;AACA,UAAMC,UAAU,GAAGJ,IAAI,KAAK,UAAT,GAAsBE,OAAtB,GAAgCD,KAAnD,CAHyB,CAGkC;;AAC3DI,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,UAA5B,EAJyB,CAKzB;;AACAZ,IAAAA,oBAAoB,CAAC,EAAE,GAAGD,iBAAL;AAAwB,OAACQ,IAAD,GAAQK;AAAhC,KAAD,CAApB,CANyB,CAM2C;AACrE,GAPD;;AASA,QAAMG,UAAU,GAAIT,CAAD,IAAO;AAExBO,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACER,IAAAA,CAAC,CAACU,cAAF,GAHsB,CAGF;;AAEpB,UAAMC,OAAO,GAAG;AACZC,MAAAA,UAAU,EAAEnB,iBAAiB,CAACmB,UADlB;AAEZC,MAAAA,KAAK,EAAEpB,iBAAiB,CAACoB,KAFb;AAGZC,MAAAA,GAAG,EAAErB,iBAAiB,CAACqB,GAHX;AAIZC,MAAAA,QAAQ,EAAEtB,iBAAiB,CAACsB;AAJhB,KAAhB;AAOAR,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,OAA1B,EAZsB,CAatB;AAEA;AACH,GAhBD;;AAoBA,sBACE;AAAA,4BACI,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,WAAW,EAAC,sBAHd;AAIE,MAAA,QAAQ,EAAEZ,WAJZ;AAKE,MAAA,KAAK,EAAEN,iBAAiB,CAACmB,UAL3B;AAME,MAAA,KAAK,EAAE;AANT;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,iBAHd;AAIE,MAAA,QAAQ,EAAEb,WAJZ;AAKE,MAAA,KAAK,EAAEN,iBAAiB,CAACoB,KAL3B;AAME,MAAA,KAAK,EAAE;AANT;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,kBADF;AA0BD;;KAlEQxB,W;AAoET,eAAeA,WAAf","sourcesContent":["import TextInput from './TextInput.js';\n\n\nfunction NewUserForm (props) {\n  const { user, setUser, newUserFormValues, setNewUserFormValues, newUserFormErrors, setNewUserFormErrors, newUserDisabled, setNewUserDisabled } = props\n\n// -------------------- Helper Functions -----------------\n\n\n\n\n  // -------------------- Event Handlers -----------------\n\n\n  const inputChange = (e) => {\n    const { name, type, value, checked } = e.target;\n    // console.log(`name: ${name}, value: ${value}`);\n    const inputValue = type === 'checkbox' ? checked : value;  // option to include checkbox\n    console.log(\"inputValue: \", inputValue)\n    // validate(name, inputValue);\n    setNewUserFormValues({ ...newUserFormValues, [name]: inputValue }); // [ ] is not an array\n  } \n\n  const formSubmit = (e) => {\n\n    console.log(\"form was submitted\")\n      e.preventDefault(); //  to prevent browser refresh\n\n      const newUser = {\n          personName: newUserFormValues.personName,\n          email: newUserFormValues.email,\n          age: newUserFormValues.age,\n          password: newUserFormValues.password,\n      }\n\n      console.log(\"new user: \", newUser)\n      // postNewUser(newUser) // post new user using helper function postNewUser\n\n      // history.push(`/`); // back to home page\n  };\n\n\n\n  return (\n    <>\n        <TextInput\n          type=\"text\"\n          name=\"personName\"\n          placeholder=\" add your name here \"\n          onChange={inputChange} \n          value={newUserFormValues.personName}\n          label={\"Name\"}\n        />\n\n        <TextInput\n          type=\"text\"\n          name=\"email\"\n          placeholder=\" email address \"\n          onChange={inputChange} \n          value={newUserFormValues.email}\n          label={\"Email\"}\n        />\n\n\n\n\n        \n  </>\n  )\n}\n\nexport default NewUserForm;"]},"metadata":{},"sourceType":"module"}