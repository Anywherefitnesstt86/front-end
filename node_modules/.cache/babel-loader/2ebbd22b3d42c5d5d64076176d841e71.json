{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState } from \"react\"; // // ------------------ Initial States -------------\n\nconst initialFormValues = {\n  personName: '',\n  email: '',\n  age: '',\n  password: ''\n};\nconst initialFormErrors = {\n  personName: '',\n  email: '',\n  age: '',\n  password: ''\n};\nconst history = useHistory();\nconst initialDisabled = false; // change back to true after testing\n\nfunction App() {\n  _s();\n\n  // -------------------- STATES -----------------------\n  const [user, setUser] = useState({}); // empty object user\n\n  const [newUserFormValues, setNewUserFormValues] = useState(initialNewUserFormValues); // form inputs\n\n  const [newUserFormErrors, setNewUserFormErrors] = useState(initialNewUserFormErrors); // errors, mechanism for reset\n\n  const [newUserdisabled, setNewUserDisabled] = useState(initialNewUserDisabled); // for button or toggle\n\n  const [formValues, setFormValues] = useState(initialFormValues); // form inputs\n\n  const [formErrors, setFormErrors] = useState(initialFormErrors); // errors, mechanism for reset\n\n  const [disabled, setDisabled] = useState(initialDisabled); // for button or toggle\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(NewUserForm, {\n      newUserFormValues: formValues,\n      setFormValues: setFormValues,\n      formErrors: formErrors,\n      setFormErrors: setFormErrors,\n      user: user,\n      setUser: setUser,\n      disabled: disabled,\n      setDisabled: setDisabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pMBXtHIjixtemW5yKjt7y+X4a04=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/App.js"],"names":["React","useState","initialFormValues","personName","email","age","password","initialFormErrors","history","useHistory","initialDisabled","App","user","setUser","newUserFormValues","setNewUserFormValues","initialNewUserFormValues","newUserFormErrors","setNewUserFormErrors","initialNewUserFormErrors","newUserdisabled","setNewUserDisabled","initialNewUserDisabled","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled"],"mappings":";;;;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAGE;;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,UAAU,EAAE,EADY;AAExBC,EAAAA,KAAK,EAAE,EAFiB;AAGxBC,EAAAA,GAAG,EAAE,EAHmB;AAIxBC,EAAAA,QAAQ,EAAE;AAJc,CAA1B;AAOA,MAAMC,iBAAiB,GAAG;AACxBJ,EAAAA,UAAU,EAAE,EADY;AAExBC,EAAAA,KAAK,EAAE,EAFiB;AAGxBC,EAAAA,GAAG,EAAE,EAHmB;AAIxBC,EAAAA,QAAQ,EAAE;AAJc,CAA1B;AAOA,MAAME,OAAO,GAAGC,UAAU,EAA1B;AACA,MAAMC,eAAe,GAAG,KAAxB,C,CAA+B;;AAEjC,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC,CAFa,CAEyB;;AAEtC,QAAM,CAACa,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAACe,wBAAD,CAA1D,CAJa,CAIyE;;AACtF,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CjB,QAAQ,CAACkB,wBAAD,CAA1D,CALa,CAKyE;;AACtF,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAACqB,sBAAD,CAAtD,CANa,CAMkE;;AAE/E,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAACC,iBAAD,CAA5C,CARa,CAQoD;;AACjE,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAACM,iBAAD,CAA5C,CATa,CASoD;;AACjE,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAACS,eAAD,CAAxC,CAVa,CAU6C;;AAI1D,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEI,QAAC,WAAD;AACE,MAAA,iBAAiB,EAAEa,UADrB;AACiC,MAAA,aAAa,EAAEC,aADhD;AAC+D,MAAA,UAAU,EAAEC,UAD3E;AACuF,MAAA,aAAa,EAAEC,aADtG;AACqH,MAAA,IAAI,EAAEd,IAD3H;AACiI,MAAA,OAAO,EAAEC,OAD1I;AACmJ,MAAA,QAAQ,EAAEc,QAD7J;AACuK,MAAA,WAAW,EAAEC;AADpL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAzBQjB,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\n\n\n  // // ------------------ Initial States -------------\n\n  const initialFormValues = {\n    personName: '',\n    email: '',\n    age: '',\n    password: '',\n  };\n\n  const initialFormErrors = {\n    personName: '',\n    email: '',\n    age: '',\n    password: '',\n  };\n\n  const history = useHistory();\n  const initialDisabled = false; // change back to true after testing\n\nfunction App() {\n  // -------------------- STATES -----------------------\n  const [user, setUser] = useState({}); // empty object user\n\n  const [newUserFormValues, setNewUserFormValues] = useState(initialNewUserFormValues); // form inputs\n  const [newUserFormErrors, setNewUserFormErrors] = useState(initialNewUserFormErrors); // errors, mechanism for reset\n  const [newUserdisabled, setNewUserDisabled] = useState(initialNewUserDisabled) // for button or toggle\n\n  const [formValues, setFormValues] = useState(initialFormValues); // form inputs\n  const [formErrors, setFormErrors] = useState(initialFormErrors); // errors, mechanism for reset\n  const [disabled, setDisabled] = useState(initialDisabled) // for button or toggle\n\n\n\n  return (\n    <div className=\"App\">\n\n        <NewUserForm \n          newUserFormValues={formValues} setFormValues={setFormValues} formErrors={formErrors} setFormErrors={setFormErrors} user={user} setUser={setUser} disabled={disabled} setDisabled={setDisabled} \n          />\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}