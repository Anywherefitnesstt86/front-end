{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState } from \"react\";\nimport NewUserFrom from './Components/NewUserForm'; // // ------------------ Initial States -------------\n\nconst initialNewUserFormValues = {\n  personName: '',\n  email: '',\n  age: '',\n  password: ''\n};\nconst initialNewUserFormErrors = {\n  personName: '',\n  email: '',\n  age: '',\n  password: ''\n};\nconst initialNewUserDisabled = false; // change back to true after testing\n\nfunction App() {\n  _s();\n\n  // --------------------------- STATES -------------------------------\n  const [user, setUser] = useState({}); // empty object user\n\n  const [newUserFormValues, setNewUserFormValues] = useState(initialNewUserFormValues); // form inputs\n\n  const [newUserFormErrors, setNewUserFormErrors] = useState(initialNewUserFormErrors); // errors, mechanism for reset\n\n  const [newUserDisabled, setNewUserDisabled] = useState(initialNewUserDisabled); // for button or toggle\n\n  const [loginFormValues, setLoginFormValues] = useState({}); // form inputs\n\n  const [loginFormErrors, setLoginFormErrors] = useState({}); // errors, mechanism for reset\n\n  const [loginDisabled, setLoginDisabled] = useState({}); // for button or toggle\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(NewUserForm, {\n      user: user,\n      setUser: setUser,\n      newUserFormValues: newUserFormValues,\n      setNewUserFormValues: setNewUserFormValues,\n      newUserFormErrors: newUserFormErrors,\n      newUsersetFormErrors: setNewUserFormErrors,\n      newUserDisabled: newUserDisabled,\n      setNewUserDisabled: setNewUserDisabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2SoCHto6iXm77giVnIrUdnrUTkA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/App.js"],"names":["React","useState","NewUserFrom","initialNewUserFormValues","personName","email","age","password","initialNewUserFormErrors","initialNewUserDisabled","App","user","setUser","newUserFormValues","setNewUserFormValues","newUserFormErrors","setNewUserFormErrors","newUserDisabled","setNewUserDisabled","loginFormValues","setLoginFormValues","loginFormErrors","setLoginFormErrors","loginDisabled","setLoginDisabled"],"mappings":";;;;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CAGE;;AAEA,MAAMC,wBAAwB,GAAG;AAC/BC,EAAAA,UAAU,EAAE,EADmB;AAE/BC,EAAAA,KAAK,EAAE,EAFwB;AAG/BC,EAAAA,GAAG,EAAE,EAH0B;AAI/BC,EAAAA,QAAQ,EAAE;AAJqB,CAAjC;AAOA,MAAMC,wBAAwB,GAAG;AAC/BJ,EAAAA,UAAU,EAAE,EADmB;AAE/BC,EAAAA,KAAK,EAAE,EAFwB;AAG/BC,EAAAA,GAAG,EAAE,EAH0B;AAI/BC,EAAAA,QAAQ,EAAE;AAJqB,CAAjC;AAOA,MAAME,sBAAsB,GAAG,KAA/B,C,CAAsC;;AAExC,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC,CAFa,CAEyB;;AAEtC,QAAM,CAACY,iBAAD,EAAoBC,oBAApB,IAA4Cb,QAAQ,CAACE,wBAAD,CAA1D,CAJa,CAIyE;;AACtF,QAAM,CAACY,iBAAD,EAAoBC,oBAApB,IAA4Cf,QAAQ,CAACO,wBAAD,CAA1D,CALa,CAKyE;;AACtF,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAACQ,sBAAD,CAAtD,CANa,CAMkE;;AAE/E,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAAC,EAAD,CAAtD,CARa,CAQ+C;;AAC5D,QAAM,CAACoB,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,CAAC,EAAD,CAAtD,CATa,CAS+C;;AAC5D,QAAM,CAACsB,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,EAAD,CAAlD,CAVa,CAU0C;;AAIvD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAGI,QAAC,WAAD;AACE,MAAA,IAAI,EAAEU,IADR;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,iBAAiB,EAAEC,iBAHrB;AAIE,MAAA,oBAAoB,EAAEC,oBAJxB;AAKE,MAAA,iBAAiB,EAAEC,iBALrB;AAME,MAAA,oBAAoB,EAAEC,oBANxB;AAOE,MAAA,eAAe,EAAEC,eAPnB;AAQE,MAAA,kBAAkB,EAAEC;AARtB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAnCQR,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\nimport NewUserFrom from './Components/NewUserForm';\n\n\n  // // ------------------ Initial States -------------\n\n  const initialNewUserFormValues = {\n    personName: '',\n    email: '',\n    age: '',\n    password: '',\n  };\n\n  const initialNewUserFormErrors = {\n    personName: '',\n    email: '',\n    age: '',\n    password: '',\n  };\n\n  const initialNewUserDisabled = false; // change back to true after testing\n\nfunction App() {\n  // --------------------------- STATES -------------------------------\n  const [user, setUser] = useState({}); // empty object user\n\n  const [newUserFormValues, setNewUserFormValues] = useState(initialNewUserFormValues); // form inputs\n  const [newUserFormErrors, setNewUserFormErrors] = useState(initialNewUserFormErrors); // errors, mechanism for reset\n  const [newUserDisabled, setNewUserDisabled] = useState(initialNewUserDisabled) // for button or toggle\n\n  const [loginFormValues, setLoginFormValues] = useState({}); // form inputs\n  const [loginFormErrors, setLoginFormErrors] = useState({}); // errors, mechanism for reset\n  const [loginDisabled, setLoginDisabled] = useState({}) // for button or toggle\n\n\n\n  return (\n    <div className=\"App\">\n\n      {/* Route to Create New User Form */}\n        <NewUserForm \n          user={user} \n          setUser={setUser} \n          newUserFormValues={newUserFormValues} \n          setNewUserFormValues={setNewUserFormValues} \n          newUserFormErrors={newUserFormErrors} \n          newUsersetFormErrors={setNewUserFormErrors} \n          newUserDisabled={newUserDisabled} \n          setNewUserDisabled={setNewUserDisabled} \n          />\n\n      {/* Route to User Login Form  */}\n\n      {/* Route to Homepage */}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}