[{"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/index.js":"1","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/App.js":"2","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/reportWebVitals.js":"3","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js":"4","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/TextInput.js":"5","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/Classes.js":"6","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/Class.js":"7"},{"size":500,"mtime":1611796659888,"results":"8","hashOfConfig":"9"},{"size":3614,"mtime":1611970657303,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611796659889,"results":"11","hashOfConfig":"9"},{"size":6183,"mtime":1611963841856,"results":"12","hashOfConfig":"9"},{"size":216,"mtime":1611808567573,"results":"13","hashOfConfig":"9"},{"size":3056,"mtime":1611969700594,"results":"14","hashOfConfig":"9"},{"size":1720,"mtime":1611966828190,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1lwwr5j",{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/index.js",[],["32","33"],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/App.js",["34","35","36","37","38","39","40","41","42"],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/reportWebVitals.js",[],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js",["43","44","45","46","47","48","49","50"],"import React, { useState, useEffect } from 'react';\nimport TextInput from './TextInput.js';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport './newUserForm.css';\n\n// import schema from './formSchema.js';\n// import Header from './Header';\n// import Footer from './Footer';\n\n\nconst initialNewUserFormValues = {\n  personName: '',\n  email: '',\n  isOverEighteen: false,\n  password: '',\n  isInstructor: false\n};\nconst initialNewUserFormErrors = {\n  personName: '',\n  email: '',\n  isOverEighteen: '',\n  password: '',\n  isInstructor: ''\n};\n\n\nfunction NewUserForm (props) {\n  const { user, setUser, newUserFormValues, setNewUserFormValues, newUserFormErrors, setNewUserFormErrors, newUserDisabled, setNewUserDisabled } = props\n\n  const history = useHistory();\n\n  // -------------------- Helper Functions -----------------\n\n  const postNewUser = newUser => {\n    axios.post('https://pt-fitness.herokuapp.com/', newUser)\n      .then(res => {\n        setUser(res.data)\n        console.log(\"New User \", res.data);\n        console.log(\"Successful res back from Axios, res.data: \", res.data);\n\n        setNewUserFormValues(initialNewUserFormValues); // reset form\n\n        history.push(`/`); // route to home page\n\n      })\n      .catch(err => {\n        console.log(\"Error: \", err)\n        history.push(`/error`)\n        debugger\n      })\n  } // posts and resets form\n\n  const validate = (name, value) => {\n  console.log(\"validate: \", name, value)\n  // yup.reach(schema, name)\n  //   .validate(value)\n  //   .then(() => setNewUserFormErrors({ ...newUserFormErrors, [name]: ''}))\n  //   .catch(err => setNewUserFormErrors({ ...newUserFormErrors, [name]: err.errors[0] })) // pending schema\n\n    console.log(\"passes form validation\")\n  }; // run validation with yup\n\n  // -------------------- Event Handlers -----------------\n\n  const inputChange = (e) => {\n    const { name, type, value, checked } = e.target;\n    console.log(`name: ${name}, value: ${value}`);\n    const inputValue = type === 'checkbox' ? checked : value;  // option to include checkbox\n    console.log(\"inputValue: \", inputValue)\n    // validate(name, inputValue);\n    setNewUserFormValues({ ...newUserFormValues, [name]: inputValue }); // [ ] is not an array\n  } \n\n  const formSubmit = (e) => {\n\n    console.log(\"form was submitted\")\n      e.preventDefault(); //  to prevent browser refresh\n\n      const newUser = {\n          personName: newUserFormValues.personName,\n          email: newUserFormValues.email,\n          isOverEighteen: newUserFormValues.isOverEighteen,\n          password: newUserFormValues.password,\n          isInstructor: newUserFormValues.isInstructor\n      }\n\n      console.log(\"new user: \", newUser)\n      // postNewUser(newUser) // post new user using helper function postNewUser\n\n      // history.push(`/`); // back to home page\n  };\n\n  // -------------------- Side Effects -----------------\n\n  useEffect(() => {\n    // schema.isValid(newUserFormValues).then(valid => setNewUserDisabled(!valid)) // pending schema\n    // console.log(\"disabled?\")\n    }, [newUserFormValues]); // Adjust the status of 'disabled\" every time formValues changes\n\n  // useEffect(() => {\n  //   console.log(\"The form Errors have changed\", newUserFormErrors)\n  // }, [newUserFormErrors]);\n\n\n  return (\n    <>\n        {/* <Header/> */}\n        <div className='background-newUserForm'>\n        \n          <div className='newUserForm-container'>\n          <form className='newUserForm' onSubmit={formSubmit}>\n\n              <TextInput\n                type=\"text\"\n                name=\"personName\"\n                placeholder=\" add your name here \"\n                onChange={inputChange} \n                value={newUserFormValues.personName}\n                label={\"Name\"}\n              />\n              <div>{newUserFormErrors.personName}</div>\n\n              <TextInput\n                type=\"text\"\n                name=\"email\"\n                placeholder=\" email address \"\n                onChange={inputChange} \n                value={newUserFormValues.email}\n                label={\"Email\"}\n              />\n              <div>{newUserFormErrors.email}</div>\n\n              <TextInput\n                type=\"text\"\n                name=\"password\"\n                placeholder=\" enter new password \"\n                onChange={inputChange} \n                value={newUserFormValues.password}\n                label={\"Password\"}\n              />\n              <div>{newUserFormErrors.password}</div>\n\n              <div className='newUserForm-radio'>\n              <input type=\"radio\" name=\"isOverEighteen\" onChange={inputChange} value={true}/>Are you over 18 years of age?\n              </div>\n              <div>{newUserFormErrors.isOverEighteen}</div>\n    \n\n              <div className='newUserForm-slider'>\n                  <div className=\"slider-container\">\n                  <label className=\"switch\">\n                    <input id=\"isInstructorInput\" type=\"checkbox\" name=\"isInstructor\"\n                    checked={newUserFormValues.isInstructor} onChange={inputChange}/> \n                    <span className=\"slider\"></span><br/>\n                  </label>\n                  <p className=\"slider-text\">Are you an instructor?</p>\n                  \n                  </div>\n              </div>\n\n              {newUserFormValues.isInstructor ? \n                <div>\n                    <p>Welcome! You should have received an instructor code by email.  Please enter it below.</p>\n                    <TextInput\n                      type=\"text\"\n                      name=\"authCode\"\n                      placeholder=\" Instructor Code\"\n                      onChange={inputChange} \n                      value={newUserFormValues.authCode}\n                      label={\" \"}\n                    />\n                </div>\n              : <br/> /* conditional rendering for instructor authorization code */  }\n\n\n              <br/>\n              <br/>\n              <button  id=\"submitBtn\" newUserDisabled={newUserDisabled}>Submit</button> \n\n          </form>\n          </div>\n          </div>\n      \n        {/* <Footer/> */}\n\n    </>\n  )\n}\n\nexport default NewUserForm;","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/TextInput.js",[],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/Classes.js",["51","52"],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/Class.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":13},{"ruleId":"57","severity":1,"message":"62","line":54,"column":9,"nodeType":"59","messageId":"60","endLine":54,"endColumn":29},{"ruleId":"57","severity":1,"message":"63","line":76,"column":10,"nodeType":"59","messageId":"60","endLine":76,"endColumn":25},{"ruleId":"57","severity":1,"message":"64","line":76,"column":27,"nodeType":"59","messageId":"60","endLine":76,"endColumn":45},{"ruleId":"57","severity":1,"message":"65","line":77,"column":10,"nodeType":"59","messageId":"60","endLine":77,"endColumn":25},{"ruleId":"57","severity":1,"message":"66","line":77,"column":27,"nodeType":"59","messageId":"60","endLine":77,"endColumn":45},{"ruleId":"57","severity":1,"message":"67","line":78,"column":10,"nodeType":"59","messageId":"60","endLine":78,"endColumn":23},{"ruleId":"57","severity":1,"message":"68","line":78,"column":25,"nodeType":"59","messageId":"60","endLine":78,"endColumn":41},{"ruleId":"57","severity":1,"message":"69","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"70","line":4,"column":13,"nodeType":"59","messageId":"60","endLine":4,"endColumn":16},{"ruleId":"57","severity":1,"message":"71","line":20,"column":7,"nodeType":"59","messageId":"60","endLine":20,"endColumn":31},{"ruleId":"57","severity":1,"message":"72","line":30,"column":11,"nodeType":"59","messageId":"60","endLine":30,"endColumn":15},{"ruleId":"57","severity":1,"message":"73","line":30,"column":86,"nodeType":"59","messageId":"60","endLine":30,"endColumn":106},{"ruleId":"57","severity":1,"message":"74","line":30,"column":125,"nodeType":"59","messageId":"60","endLine":30,"endColumn":143},{"ruleId":"57","severity":1,"message":"75","line":36,"column":9,"nodeType":"59","messageId":"60","endLine":36,"endColumn":20},{"ruleId":"57","severity":1,"message":"76","line":55,"column":9,"nodeType":"59","messageId":"60","endLine":55,"endColumn":17},{"ruleId":"57","severity":1,"message":"77","line":10,"column":23,"nodeType":"59","messageId":"60","endLine":10,"endColumn":36},{"ruleId":"57","severity":1,"message":"78","line":10,"column":75,"nodeType":"59","messageId":"60","endLine":10,"endColumn":85},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Class' is defined but never used.","'initialClassesErrors' is assigned a value but never used.","'loginFormValues' is assigned a value but never used.","'setLoginFormValues' is assigned a value but never used.","'loginFormErrors' is assigned a value but never used.","'setLoginFormErrors' is assigned a value but never used.","'loginDisabled' is assigned a value but never used.","'setLoginDisabled' is assigned a value but never used.","'useState' is defined but never used.","'yup' is defined but never used.","'initialNewUserFormErrors' is assigned a value but never used.","'user' is assigned a value but never used.","'setNewUserFormErrors' is assigned a value but never used.","'setNewUserDisabled' is assigned a value but never used.","'postNewUser' is assigned a value but never used.","'validate' is assigned a value but never used.","'setAllClasses' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]