[{"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/index.js":"1","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/App.js":"2","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/reportWebVitals.js":"3","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js":"4","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/TextInput.js":"5"},{"size":500,"mtime":1611796659888,"results":"6","hashOfConfig":"7"},{"size":2916,"mtime":1611892989348,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611796659889,"results":"9","hashOfConfig":"7"},{"size":4854,"mtime":1611892584384,"results":"10","hashOfConfig":"7"},{"size":216,"mtime":1611808567573,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1lwwr5j",{"filePath":"15","messages":"16","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/index.js",[],["24","25"],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/App.js",["26"],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/reportWebVitals.js",[],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js",["27","28","29","30","31","32","33","34","35"],"import React, { useState, useEffect } from 'react';\nimport TextInput from './TextInput.js';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-dom';\n// import schema from './formSchema.js';\n// import Header from './Header';\n// import Footer from './Footer';\n\n\nconst initialNewUserFormValues = {\n  personName: '',\n  email: '',\n  age: '',\n  password: '',\n  isInstructor: false,\n};\n\nconst initialNewUserFormErrors = {\n  personName: '',\n  email: '',\n  age: '',\n  password: '',\n  isInstructor: '',\n};\n\n\nfunction NewUserForm (props) {\n  const { user, setUser, newUserFormValues, setNewUserFormValues, newUserFormErrors, setNewUserFormErrors, newUserDisabled, setNewUserDisabled } = props\n\n  const history = useHistory();\n\n  // -------------------- Helper Functions -----------------\n\n  const postNewUser = newUser => {\n    axios.post('https://pt-fitness.herokuapp.com/', newUser)\n      .then(res => {\n        setUser(res.data)\n        console.log(\"New User \", res.data);\n        console.log(\"Successful res back from Axios, res.data: \", res.data);\n\n        setNewUserFormValues(initialNewUserFormValues); // reset form\n\n        history.push(`/`); // route to home page\n\n      })\n      .catch(err => {\n        console.log(\"Error: \", err)\n        history.push(`/error`)\n        debugger\n      })\n  } // posts and resets form\n\n  const validate = (name, value) => {\n  console.log(\"validate: \", name, value)\n  // yup.reach(schema, name)\n  //   .validate(value)\n  //   .then(() => setNewUserFormErrors({ ...newUserFormErrors, [name]: ''}))\n  //   .catch(err => setNewUserFormErrors({ ...newUserFormErrors, [name]: err.errors[0] })) // pending schema\n\n    console.log(\"passes form validation\")\n  }; // run validation with yup\n\n  // -------------------- Event Handlers -----------------\n\n  const inputChange = (e) => {\n    const { name, type, value, checked } = e.target;\n    // console.log(`name: ${name}, value: ${value}`);\n    const inputValue = type === 'checkbox' ? checked : value;  // option to include checkbox\n    console.log(\"inputValue: \", inputValue)\n    // validate(name, inputValue);\n    setNewUserFormValues({ ...newUserFormValues, [name]: inputValue }); // [ ] is not an array\n  } \n\n  const formSubmit = (e) => {\n\n    console.log(\"form was submitted\")\n      e.preventDefault(); //  to prevent browser refresh\n\n      const newUser = {\n          personName: newUserFormValues.personName,\n          email: newUserFormValues.email,\n          age: newUserFormValues.age,\n          password: newUserFormValues.password,\n      }\n\n      console.log(\"new user: \", newUser)\n      // postNewUser(newUser) // post new user using helper function postNewUser\n\n      // history.push(`/`); // back to home page\n  };\n\n  // -------------------- Side Effects -----------------\n\n  useEffect(() => {\n    // schema.isValid(newUserFormValues).then(valid => setNewUserDisabled(!valid)) // pending schema\n    // console.log(\"disabled?\")\n    }, [newUserFormValues]); // Adjust the status of 'disabled\" every time formValues changes\n\n  useEffect(() => {\n    console.log(\"The form Errors have changed\", newUserFormErrors)\n  }, [newUserFormErrors]);\n\n\n  return (\n    <>\n        {/* <Header/> */}\n\n        <TextInput\n          type=\"text\"\n          name=\"personName\"\n          placeholder=\" add your name here \"\n          onChange={inputChange} \n          value={newUserFormValues.personName}\n          label={\"Name\"}\n        />\n        <div>{newUserFormErrors.personName}</div>\n\n        <TextInput\n          type=\"text\"\n          name=\"email\"\n          placeholder=\" email address \"\n          onChange={inputChange} \n          value={newUserFormValues.email}\n          label={\"Email\"}\n        />\n        <div>{newUserFormErrors.email}</div>\n\n        <TextInput\n          type=\"text\"\n          name=\"age\"\n          placeholder=\" enter your age \"\n          onChange={inputChange} \n          value={newUserFormValues.age}\n          label={\"Age\"}\n        />\n        <div>{newUserFormErrors.age}</div>\n\n        <TextInput\n          type=\"text\"\n          name=\"password\"\n          placeholder=\" enter new password \"\n          onChange={inputChange} \n          value={newUserFormValues.password}\n          label={\"New Password\"}\n        />\n        <div>{newUserFormErrors.password}</div>\n\n        <p>If you are signing up as an instructor, you should have received an instructor code in an email.</p>\n        <TextInput\n          type=\"text\"\n          name=\"isInstructor\"\n          placeholder=\" Instructor Code\"\n          onChange={inputChange} \n          value={newUserFormValues.isInstructor}\n          label={\"Instructor Code\"}\n        />\n        <br/>\n        <br/>\n        <button  id=\"submitBtn\" disabled={newUserDisabled}>Submit</button> \n\n      {/* <Footer/> */}\n\n    </>\n  )\n}\n\nexport default NewUserForm;","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/TextInput.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":null,"fatal":true,"severity":2,"message":"40","line":33,"column":7},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"45","line":4,"column":13,"nodeType":"43","messageId":"44","endLine":4,"endColumn":16},{"ruleId":"41","severity":1,"message":"46","line":18,"column":7,"nodeType":"43","messageId":"44","endLine":18,"endColumn":31},{"ruleId":"41","severity":1,"message":"47","line":28,"column":11,"nodeType":"43","messageId":"44","endLine":28,"endColumn":15},{"ruleId":"41","severity":1,"message":"48","line":28,"column":86,"nodeType":"43","messageId":"44","endLine":28,"endColumn":106},{"ruleId":"41","severity":1,"message":"49","line":28,"column":125,"nodeType":"43","messageId":"44","endLine":28,"endColumn":143},{"ruleId":"41","severity":1,"message":"50","line":34,"column":9,"nodeType":"43","messageId":"44","endLine":34,"endColumn":20},{"ruleId":"41","severity":1,"message":"51","line":53,"column":9,"nodeType":"43","messageId":"44","endLine":53,"endColumn":17},{"ruleId":"41","severity":1,"message":"52","line":74,"column":9,"nodeType":"43","messageId":"44","endLine":74,"endColumn":19},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 31 | \u001b[39m      classType\u001b[33m:\u001b[39m \u001b[32m\"Yoga\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 32 | \u001b[39m      classDate\u001b[33m:\u001b[39m \u001b[32m\"2021/10/30\"\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 33 | \u001b[39m      startTime\u001b[33m:\u001b[39m \u001b[32m\"10:00am\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 | \u001b[39m      duration\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[90m// hours\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 35 | \u001b[39m      intensity\u001b[33m:\u001b[39m \u001b[32m\"low\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 36 | \u001b[39m      location\u001b[33m:\u001b[39m \u001b[32m\"Public Beach\"\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'yup' is defined but never used.","'initialNewUserFormErrors' is assigned a value but never used.","'user' is assigned a value but never used.","'setNewUserFormErrors' is assigned a value but never used.","'setNewUserDisabled' is assigned a value but never used.","'postNewUser' is assigned a value but never used.","'validate' is assigned a value but never used.","'formSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]