[{"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/index.js":"1","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/App.js":"2","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/reportWebVitals.js":"3","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js":"4","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/TextInput.js":"5","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/Footer.js":"6"},{"size":500,"mtime":1611796659888,"results":"7","hashOfConfig":"8"},{"size":1835,"mtime":1611808567572,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611796659889,"results":"10","hashOfConfig":"8"},{"size":4833,"mtime":1611814429056,"results":"11","hashOfConfig":"8"},{"size":216,"mtime":1611808567573,"results":"12","hashOfConfig":"8"},{"size":396,"mtime":1611814323159,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1lwwr5j",{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/index.js",[],["28","29"],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/App.js",["30","31","32","33","34","35","36"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\nimport NewUserForm from './Components/NewUserForm';\n\n\n  // -------------------------- INITIAL STATES ------------------------\n\n  const initialNewUserFormValues = {\n    personName: '',\n    email: '',\n    age: '',\n    password: '',\n  };\n\n  const initialNewUserFormErrors = {\n    personName: '',\n    email: '',\n    age: '',\n    password: '',\n  };\n\n  const initialNewUserDisabled = false; // change back to true after testing\n\nfunction App() {\n  // --------------------------- STATES -------------------------------\n  const [user, setUser] = useState({}); // empty object user\n\n  const [newUserFormValues, setNewUserFormValues] = useState(initialNewUserFormValues); // form inputs\n  const [newUserFormErrors, setNewUserFormErrors] = useState(initialNewUserFormErrors); // errors, mechanism for reset\n  const [newUserDisabled, setNewUserDisabled] = useState(initialNewUserDisabled) // for button or toggle\n\n  const [loginFormValues, setLoginFormValues] = useState({}); // form inputs\n  const [loginFormErrors, setLoginFormErrors] = useState({}); // errors, mechanism for reset\n  const [loginDisabled, setLoginDisabled] = useState({}) // for button or toggle\n\n\n\n  return (\n    <div className=\"App\">\n\n      {/* Route to Create New User Form */}\n        <NewUserForm \n          user={user} \n          setUser={setUser} \n          newUserFormValues={newUserFormValues} \n          setNewUserFormValues={setNewUserFormValues} \n          newUserFormErrors={newUserFormErrors} \n          newUsersetFormErrors={setNewUserFormErrors} \n          newUserDisabled={newUserDisabled} \n          setNewUserDisabled={setNewUserDisabled} \n          />\n\n      {/* Route to User Login Form  */}\n\n      {/* Route to Homepage */}\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/reportWebVitals.js",[],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/NewUserForm.js",["37","38","39","40","41","42","43","44","45"],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/TextInput.js",[],"/Users/qirhi/Desktop/Lambda/lambda-code/lambda-unit-two-projects/anywhere-fitness/src/Components/Footer.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":33,"column":10,"nodeType":"52","messageId":"53","endLine":33,"endColumn":25},{"ruleId":"50","severity":1,"message":"55","line":33,"column":27,"nodeType":"52","messageId":"53","endLine":33,"endColumn":45},{"ruleId":"50","severity":1,"message":"56","line":34,"column":10,"nodeType":"52","messageId":"53","endLine":34,"endColumn":25},{"ruleId":"50","severity":1,"message":"57","line":34,"column":27,"nodeType":"52","messageId":"53","endLine":34,"endColumn":45},{"ruleId":"50","severity":1,"message":"58","line":35,"column":10,"nodeType":"52","messageId":"53","endLine":35,"endColumn":23},{"ruleId":"50","severity":1,"message":"59","line":35,"column":25,"nodeType":"52","messageId":"53","endLine":35,"endColumn":41},{"ruleId":"50","severity":1,"message":"60","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"61","line":4,"column":13,"nodeType":"52","messageId":"53","endLine":4,"endColumn":16},{"ruleId":"50","severity":1,"message":"62","line":19,"column":7,"nodeType":"52","messageId":"53","endLine":19,"endColumn":31},{"ruleId":"50","severity":1,"message":"63","line":31,"column":11,"nodeType":"52","messageId":"53","endLine":31,"endColumn":15},{"ruleId":"50","severity":1,"message":"64","line":31,"column":86,"nodeType":"52","messageId":"53","endLine":31,"endColumn":106},{"ruleId":"50","severity":1,"message":"65","line":31,"column":125,"nodeType":"52","messageId":"53","endLine":31,"endColumn":143},{"ruleId":"50","severity":1,"message":"66","line":37,"column":9,"nodeType":"52","messageId":"53","endLine":37,"endColumn":20},{"ruleId":"50","severity":1,"message":"67","line":56,"column":9,"nodeType":"52","messageId":"53","endLine":56,"endColumn":17},{"ruleId":"50","severity":1,"message":"68","line":77,"column":9,"nodeType":"52","messageId":"53","endLine":77,"endColumn":19},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'loginFormValues' is assigned a value but never used.","'setLoginFormValues' is assigned a value but never used.","'loginFormErrors' is assigned a value but never used.","'setLoginFormErrors' is assigned a value but never used.","'loginDisabled' is assigned a value but never used.","'setLoginDisabled' is assigned a value but never used.","'useState' is defined but never used.","'yup' is defined but never used.","'initialNewUserFormErrors' is assigned a value but never used.","'user' is assigned a value but never used.","'setNewUserFormErrors' is assigned a value but never used.","'setNewUserDisabled' is assigned a value but never used.","'postNewUser' is assigned a value but never used.","'validate' is assigned a value but never used.","'formSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]